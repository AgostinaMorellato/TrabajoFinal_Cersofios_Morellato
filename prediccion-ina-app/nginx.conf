# Este archivo contiene las instrucciones para nuestro servidor web Nginx

# Definimos un servidor virtual
server {
    # Nginx escuchará en el puerto 80 dentro del contenedor de Docker
    listen 80;

    # El directorio raíz donde se encuentran nuestros archivos de React compilados
    root /usr/share/nginx/html;

    # Cuando alguien visita la raíz del sitio, sirve el archivo index.html
    index index.html;

    # ---- Regla #1: Para que el enrutamiento de React funcione ----
    # Esta es la configuración más importante para una Single Page Application (SPA)
    location / {
        # Intenta servir el archivo que pide el navegador (ej: /logo.png).
        # Si no lo encuentra, intenta servir un directorio.
        # Si tampoco lo encuentra, redirige la petición al /index.html.
        # Esto permite que el código de JavaScript de React (React Router)
        # tome el control y muestre la página correcta (ej: /predict).
        try_files $uri $uri/ /index.html;
    }

    # ---- Regla #2: Para que las llamadas a la API funcionen ----
    # Esta sección actúa como un "proxy inverso".
    # Cualquier petición que el frontend haga a una URL que empiece con /api/...
    # será interceptada y redirigida a nuestro backend.
    location /api/ {
        # 'backend' es el nombre que le dimos al servicio del backend
        # en nuestro archivo docker-compose.yml. Docker se encarga de la magia
        # para que 'backend' apunte al contenedor correcto.
        # El puerto 5001 es donde escucha nuestra aplicación de Flask.
        proxy_pass http://backend:5001/;

        # Cabeceras estándar para que el proxy funcione correctamente
        # y el backend reciba la información correcta del cliente original.
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}
